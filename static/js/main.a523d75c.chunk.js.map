{"version":3,"sources":["reportWebVitals.js","index.js","service/AuthService.js","util/Url.js","App.js","component/about/AboutPage.js","component/NotFoundPage.js","component/Logout.js","component/auth/Login.js","component/auth/Register.js","component/common/exhibit/LineChartMd.js","component/common/exhibit/LineChart.js","component/common/grid/AgGrid.js","util/Utils.js","util/ChartUtils.js","component/dashboard/CovidDashboardPage.js","service/AuthHeader.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","AuthService","username","password","axios","post","apiUrl","response","data","accessToken","localStorage","setItem","JSON","stringify","console","log","removeItem","email","parse","getItem","className","exact","path","component","Login","Register","CovidDashboardPage","AboutPage","Logout","NotFoundPage","React","Component","hot","module","to","required","value","role","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","type","id","placeholder","autoFocus","onChange","validations","htmlFor","disabled","style","display","withRouter","vusername","vpassword","handleRegister","onChangeEmail","successful","register","chartOptions","title","text","align","textTransform","fontSize","fontWeight","yAxis","xAxis","dateTimeLabelFormats","day","month","legend","layout","verticalAlign","floating","series","credits","enabled","LineChart","highchartsOptions","options","Object","keys","ChartOptions","yLabel","legendEnable","highcharts","Highcharts","defaultProps","AgGrid","rowData","columns","columnsData","entries","index","field","sortable","filter","resizable","valueFormatter","numberFormatter","params","toLocaleString","onGridReady","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","optionsConfirmed","optionsRecovered","optionsActive","optionsDeceased","user","authHeader","authAxios","create","headers","Authorization","getCovidData","get","isLoaded","catch","undefined","cases_time_series","recoveredCaseData","confirmedCaseData","deceasedCaseData","activeCaseData","i","dailyrecovered","dailyconfirmed","dailydeceased","dailyactive","epochDate","item","dateInEpoch","parseInt","testedData","vacinationData","previousDayVacinated","tested","dailyTested","dailyVacinated","testedAsOfDateInEpoch","dailyrtpcrsamplescollectedicmrapplication","firstdoseadministered","dailyVacination","optionsRecData","name","color","optionsConData","optionsDesData","optionsActData","optionsTesData","optionsVacData","totalConfirmed","totalconfirmed","dailyConfirmed","totalRecovered","totalrecovered","dailyRecovered","totalDeceased","totaldeceased","dailyDeceased","totalActive","dailyActive","statewise","onClick","logout","Array","height"],"mappings":"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","file":"static/js/main.a523d75c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\nimport {apiUrl} from '../util/Url.js'\n\n\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(apiUrl + \"api/auth/signin\", {\n        username,\n        password\n      })\n      .then(response => {\n\n        if (response.data.accessToken) {\n\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    console.log(\"Logout called\");\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(apiUrl + \"api/auth/signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();","export const apiUrl = process.env.NODE_ENV === 'development' ? 'https://covid-19-dashboard-rest-api.herokuapp.com/' : 'https://covid-19-dashboard-rest-api.herokuapp.com/'\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Link,  BrowserRouter as Router } from \"react-router-dom\";\n\nimport AboutPage from \"./component/about/AboutPage\";\nimport CovidDashboardPage from \"./component/dashboard/CovidDashboardPage\";\nimport NotFoundPage from \"./component/NotFoundPage\";\nimport Logout from \"./component/Logout\";\nimport { hot } from \"react-hot-loader\";\nimport Login from \"./component/auth/Login\"\nimport Register from \"./component/auth/Register\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div>\n\n        <div className=\"container-fluid\">\n           <div className=\"col-lg-12\">\n\n\n            <Router>\n          <Switch>\n\n          <Route exact path={[\"/covid-19\", \"/covid-19/login\"]} component={Login} />\n\n          <Route exact path=\"/covid-19/register\" component={Register} />\n          <Route exact path=\"/covid-19/dashboard\" component={CovidDashboardPage} />\n          <Route path=\"/covid-19/about\" component={AboutPage} />\n          <Route path=\"/covid-19/logout\" component={Logout} />\n          <Route component={NotFoundPage} />\n        </Switch>\n        </Router>\n\n\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nexport default hot(module)(App);\n","import React from 'react';\nimport '../../styles/about-page.css';\n\n// Since this component is simple and static, there's no parent container for it.\nconst AboutPage = () => {\n  return (\n    <div>\n      <h2>About me</h2>\n      <p>\n        My name is Jay, I am a fullstack developer. I write bogs at https://distinguisheddeveloper.wordpress.com/\n      </p>\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h4>\n        404 Page Not Found\n      </h4>\n      <Link to=\"/\"> Go back to homepage </Link>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logout = () => {\n  return (\n    <div>\n      <h4>\n        User logged out successfully\n      </h4>\n      <Link to=\"/covid-19\"> Go back to homepage </Link>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../../service/AuthService\";\n\nimport '../../styles/login.css';\nimport {Link} from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n            console.log(\"In login.js\")\n          this.props.history.push(\"/covid-19/dashboard\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n            console.log(\"Error while login : In login.js\")\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n\n      \n        <div className=\"row\">\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div className=\"card card-signin my-5\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title text-center\">Sign In</h5>\n                <Form className=\"form-signin\" onSubmit={this.handleLogin}\n                        ref={c => {\n                              this.form = c;\n                            }}>\n                  <div className=\"form-label-group\">\n                    <input type=\"text\" id=\"username\" className=\"form-control\" placeholder=\"Username\" required autoFocus value={this.state.username} onChange={this.onChangeUsername} validations={[required]}/>\n                    <label htmlFor=\"username\">Username</label>\n                  </div>\n\n    \n                  <div className=\"form-label-group\">\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required value={this.state.password} onChange={this.onChangePassword} validations={[required]}/>\n                    <label htmlFor=\"inputPassword\">Password</label>\n                  </div>\n\n                    {this.state.message && (\n                                  <div className=\"form-group\">\n                                    <div className=\"alert alert-danger alert-validate\" role=\"alert\">\n                                      {this.state.message}\n                                    </div>\n                                  </div>\n                                )}\n\n                  <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\" disabled={this.state.loading}>\n                  {this.state.loading && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                              )}\n                              <span> Sign in</span>\n                  </button>\n\n                  <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                  this.checkBtn = c;\n                                }}\n                              />\n\n\n                </Form>\n                <hr className=\"my-4\"/>\n                <p className=\"text-center\">\n                                   <Link to='/covid-19/register'>Create an Account</Link>\n\n                 </p>\n              </div>\n            </div>\n          </div>\n       </div>\n    \n\n\n\n    );\n  }\n}\n\nexport default withRouter(Login);","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../../service/AuthService\";\nimport {Link} from \"react-router-dom\";\n\nimport '../../styles/login.css';\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                  <div className=\"card card-signin my-5\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center\">Sign Up</h5>\n                          <Form className=\"form-signin\"\n                            onSubmit={this.handleRegister}\n                            ref={c => {\n                              this.form = c;\n                            }}\n                          >\n\n                         {!this.state.successful && (\n                         <div>\n                           <div className=\"form-label-group\">\n                                              <input type=\"text\" id=\"username\" className=\"form-control\" placeholder=\"Username\" required autoFocus value={this.state.username} onChange={this.onChangeUsername} validations={[required, vusername]}/>\n                                              <label htmlFor=\"username\">Username</label>\n                                            </div>\n\n                           <div className=\"form-label-group\">\n                                                <input type=\"text\" id=\"email\" className=\"form-control\" placeholder=\"Email\" required autoFocus value={this.state.username} value={this.state.email}\n                                                                                                                                                                                               onChange={this.onChangeEmail}\n                                                                                                                                                                                               validations={[required]}/>\n                                                <label htmlFor=\"email\">Email</label>\n                           </div>\n\n                           <div className=\"form-label-group\">\n                                               <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required value={this.state.password}\n                                                                                                                                                                      onChange={this.onChangePassword}\n                                                                                                                                                                      validations={[required, vpassword]}/>\n                                               <label htmlFor=\"inputPassword\">Password</label>\n                                             </div>\n\n\n                            <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" >Sign Up</button>\n\n                                           </div>)}\n\n\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n                <div>\n                {this.state.successful && (\n                    <p className=\"text-center\">\n                                                       <Link to='/covid-19'>Click here to Login</Link>\n                                     </p>)\n                }\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n      </div>\n            </div>\n    );\n  }\n}","\n\nexport const chartOptions = {\n  title: {\n    text: \"\",\n    align: \"left\",\n    style: {\n      textTransform: \"none\",\n      fontSize: \"1.5rem\",\n      fontWeight: \"500\"\n    }\n  },\n  yAxis: {\n    title: {\n      text: \"\",\n      style: {\n        textTransform: \"none\"\n      }\n    }\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n        day: \"%e-%b-%y\",\n        month: \"%b-%y\"\n    }\n  },\n  legend: {\n    layout: \"horizontal\",\n    align: \"right\",\n    verticalAlign: \"top\",\n    floating: true\n  },\n  series: [],\n  credits: {\n    enabled: false\n  }\n};\n\nexport default chartOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport ChartOptions from \"./LineChartMd\";\n\nimport '../../../styles/chart.css';\n\nconst LineChart = props => {\n  const { data, options, id } = props;\n  let highchartsOptions;\n\n  if (Object.keys(options).length) {\n    highchartsOptions = {\n      ...ChartOptions,\n      series: data,\n      title: { ...ChartOptions.title, text: options.title },\n      yAxis: { ...ChartOptions.yAxis, title: { text: options.yLabel } },\n      legend: { ...ChartOptions.legend, enabled: options.legendEnable }\n    }\n  }\n\n  return (\n\n      <div className=\"line-chart\">\n          <HighchartsReact highcharts={Highcharts} options={highchartsOptions} id={id} />\n      </div>\n\n\n  );\n};\n\nLineChart.propTypes = {\n  data: PropTypes.array,\n  options: PropTypes.object,\n  id: PropTypes.string\n};\n\nLineChart.defaultProps = {\n  data: [],\n  options: {},\n  id: \"\"\n};\n\nexport default LineChart;","import PropTypes from \"prop-types\";\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nconst AgGrid = props => {\n  const { rowData , columns, id} = props;\n  let columnsData = [];\n\n    for (const [index, value] of columns.entries()) {\n        if(value === \"state\"){\n            columnsData.push(<AgGridColumn field={value} sortable={ true } filter={ true } resizable={true} key={\"ag-grid-col-\"+index}></ AgGridColumn>)\n        }else{\n            columnsData.push(<AgGridColumn field={value} sortable={ true } filter={ true } resizable={true} valueFormatter={numberFormatter} key={\"ag-grid-col-\"+index}></ AgGridColumn>)\n        }\n      }\n\n    function numberFormatter(params) {\n         return params.value.toLocaleString('en-IN');\n    }\n\n    function onGridReady(params) {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        this.gridApi.sizeColumnsToFit();\n\n      };\n  return (\n\n      <AgGridReact rowData={rowData} id={id} onGridReady={onGridReady}>\n              {columnsData}\n      </AgGridReact>\n\n  );\n};\n\nAgGrid.propTypes = {\n  rowData: PropTypes.array,\n  columns: PropTypes.array,\n  id: PropTypes.string\n};\n\nAgGrid.defaultProps = {\n  rowData: [],\n  columns: [],\n  id: \"\"\n};\nexport default AgGrid;","export const columns = [\"state\",\"active\",\"confirmed\", \"deaths\", \"recovered\"]\n","export const optionsConfirmed = {\n  title: \"\",\n  yLabel: \"Count\",\n  legendEnable: true\n};\n\nexport const optionsRecovered = {\n  title: \"\",\n  yLabel: \"Count\",\n  legendEnable: true\n};\n\nexport const optionsActive = {\n  title: \"\",\n  yLabel: \"Count\",\n  legendEnable: true\n};\n\nexport const optionsDeceased = {\n  title: \"\",\n  yLabel: \"Count\",\n  legendEnable: true\n};","import React from 'react';\nimport axios from \"axios\";\n\nimport '../../styles/about-page.css';\nimport LineChart from '../common/exhibit/LineChart'\nimport AgGrid from '../common/grid/AgGrid'\nimport {columns} from '../../util/Utils.js'\nimport {apiUrl} from '../../util/Url.js'\nimport {optionsConfirmed, optionsRecovered, optionsActive, optionsDeceased} from '../../util/ChartUtils.js'\n\nimport authHeader from '../../service/AuthHeader';\nimport {Link} from \"react-router-dom\";\nimport AuthService from \"../../service/AuthService\";\n\nconst accessToken = authHeader();\n\nconst authAxios = axios.create({\n    headers: {\n        Authorization: accessToken\n    }\n});\n\n\nclass CovidDashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {data: {}};\n      }\n\n      componentDidMount() {\n          this.getCovidData();\n      }\n\n\n      getCovidData() {\n            console.log(\"Calling API from: \"+ apiUrl);\n            authAxios.get(apiUrl+\"api/covid/india\")\n            .then((response) => {\n                  this.setState({\n                       isLoaded: true,\n                       data: response.data\n                  });\n            })\n            .catch((error) => {\n                   this.setState({\n                        isLoaded: false,\n                        error\n                   });\n            });\n      }\n\n\n    render() {\n      const { error, isLoaded, data } = this.state;\n          if (error) {\n            return <div>Error: {error.message}</div>;\n          } else if (!isLoaded) {\n            return <div>Loading...</div>;\n          } else {\n            if(data.cases_time_series !== undefined){\n                let recoveredCaseData = [];\n                let confirmedCaseData = [];\n                let deceasedCaseData = [];\n                let activeCaseData = [];\n                let categories = [];\n                for(let i=0; i< data.cases_time_series.length; i++){\n                    var item = data.cases_time_series[i];\n                    let dailyrecovered = [];\n                    let dailyconfirmed = [];\n                    let dailydeceased = [];\n                    let dailyactive = [];\n\n                    let epochDate = item.dateInEpoch * 1000;\n                    dailyrecovered.push(epochDate);\n                    dailyrecovered.push(parseInt(item.dailyrecovered));\n                    recoveredCaseData.push(dailyrecovered);\n\n                    dailyconfirmed.push(epochDate);\n                    dailyconfirmed.push(parseInt(item.dailyconfirmed));\n                    confirmedCaseData.push(dailyconfirmed);\n\n                    dailydeceased.push(epochDate);\n                    dailydeceased.push(parseInt(item.dailydeceased));\n                    deceasedCaseData.push(dailydeceased);\n\n                    dailyactive.push(epochDate);\n                    dailyactive.push(dailyconfirmed[1] - dailyrecovered[1] - dailydeceased[1]);\n                    activeCaseData.push(dailyactive);\n                }\n\n                let testedData = [];\n                let vacinationData = [];\n                let previousDayVacinated = 0;\n                for(let i=0; i< data.tested.length; i++){\n                    var item = data.tested[i];\n                    let dailyTested = [];\n                    let dailyVacinated = [];\n\n                    let epochDate = item.testedAsOfDateInEpoch * 1000;\n\n                    if(item.dailyrtpcrsamplescollectedicmrapplication != \"\"){\n                        dailyTested.push(epochDate);\n                        dailyTested.push( parseInt(item.dailyrtpcrsamplescollectedicmrapplication));\n                        testedData.push(dailyTested);\n                    }\n\n\n                    if(item.firstdoseadministered != \"\"){\n                        dailyVacinated.push(epochDate);\n                        let dailyVacination = parseInt(item.firstdoseadministered) - previousDayVacinated;\n                        dailyVacinated.push( dailyVacination);\n                        vacinationData.push(dailyVacinated);\n                        previousDayVacinated = parseInt(item.firstdoseadministered);\n                    }\n                }\n\n                const optionsRecData = {name: \"Recovered\", data: recoveredCaseData, color: \"#009688\"};\n                const optionsConData = {name: \"Confirmed\", data: confirmedCaseData, color: \"#f44336\"};\n                const optionsDesData = {name: \"Deceased\", data: deceasedCaseData, color: \"#6c757d\"};\n                const optionsActData = {name: \"Active\", data: activeCaseData, color: \"#3f51b5\"};\n                const optionsTesData = {name: \"Tested\", data: testedData, color: \"#673ab7\"};\n                const optionsVacData = {name: \"Vacinated\", data: vacinationData, color: \"#03a9f4\"};\n\n                const totalConfirmed = data.cases_time_series[data.cases_time_series.length-1].totalconfirmed;\n                const dailyConfirmed = data.cases_time_series[data.cases_time_series.length-1].dailyconfirmed;\n                const totalRecovered = data.cases_time_series[data.cases_time_series.length-1].totalrecovered;\n                const dailyRecovered = data.cases_time_series[data.cases_time_series.length-1].dailyrecovered;\n                const totalDeceased = data.cases_time_series[data.cases_time_series.length-1].totaldeceased;\n                const dailyDeceased = data.cases_time_series[data.cases_time_series.length-1].dailydeceased;\n                let totalActive = totalConfirmed - totalRecovered - totalDeceased;\n                let dailyActive = dailyConfirmed - dailyRecovered - dailyDeceased;\n\n                const rowData = data.statewise.filter(item => item.state !== \"State Unassigned\");\n                const user = JSON.parse(localStorage.getItem(\"user\"));\n                const username = user[\"username\"];\n\n            return (\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-8 sol-sm-12\">\n                        <nav className=\"page-header\">\n                            <h2>Covid-19 Dashboard</h2>\n                        </nav>\n                    </div>\n                    <div className=\"col text-right\">\n\n                        <h6>Welcome, {username} </h6>\n                        <Link to='/covid-19/logout' onClick={() => AuthService.logout()}>logout</Link>\n                    </div>\n                </div>\n                <hr/>\n\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col\"></div>\n                    <div className=\"col-lg-8 col-md-10\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-3 col-md-6 col-sm-12 text-center is-confirmed\">\n                                <h4>Confirmed</h4>\n                                <div> {totalConfirmed.toLocaleString('en-IN')} </div>\n                                <div className=\"small-text\"> + {dailyConfirmed.toLocaleString('en-IN')} </div>\n                             </div>\n                             <div className=\"col-lg-3 col-md-6 col-sm-12 text-center is-recovered\">\n                                 <h4>Recovered</h4>\n                                 <div> {totalRecovered.toLocaleString('en-IN')} </div>\n                                 <div className=\"small-text\"> + {dailyRecovered.toLocaleString('en-IN')} </div>\n                              </div>\n                               <div className=\"col-lg-3 col-md-6 col-sm-12 text-center is-active\">\n                                   <h4>Active</h4>\n                                   <div> {totalActive.toLocaleString('en-IN')} </div>\n                                   <div className=\"small-text\"> + {dailyActive.toLocaleString('en-IN')} </div>\n                               </div>\n                               <div className=\"col-lg-3 col-md-6 col-sm-12 text-center is-deceased\">\n                                   <h4>Deceased</h4>\n                                   <div> {totalDeceased.toLocaleString('en-IN')} </div>\n                                   <div className=\"small-text\"> + {dailyDeceased.toLocaleString('en-IN')} </div>\n                               </div>\n                           </div>\n                       </div>\n                       <div className=\"col\"></div>\n                 </div>\n                 <br/>\n\n\n                <div className=\"row\">\n                    <div className=\"col\"></div>\n                    <div className=\"col-lg-11 col-md-11\">\n                         <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                   <LineChart data={new Array(optionsConData)} options={optionsConfirmed} id=\"confirmed\" />\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                <LineChart data={new Array(optionsRecData)} options={optionsRecovered} id=\"recovered\" />\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                  <LineChart data={new Array(optionsActData)} options={optionsActive} id=\"Active\" />\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                <LineChart data={new Array(optionsDesData)} options={optionsDeceased} id=\"Deceased\" />\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                  <LineChart data={new Array(optionsTesData)} options={optionsActive} id=\"Tested\" />\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                <LineChart data={new Array(optionsVacData)} options={optionsDeceased} id=\"Vacinated\" />\n                            </div>\n                         </div>\n                    </div>\n                    <div className=\"col\"></div>\n                </div>\n\n                <br/><br/>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"ag-theme-material\" style={{height: 400}}>\n                            <AgGrid rowData={rowData} columns={columns} id=\"AgGrid\"></AgGrid>\n                        </div>\n                    </div>\n                </div>\n\n              </div>\n              </div>\n            );\n            }else{\n                return <div>Invalid response...</div>;\n            }\n          }\n\n    }\n}\n\nexport default CovidDashboardPage;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return 'Bearer ' + user.accessToken ;\n  } else {\n    return {};\n  }\n}"],"sourceRoot":""}